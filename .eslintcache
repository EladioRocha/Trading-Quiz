[{"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\App.js":"3","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Login\\Login.js":"4","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\QuizGame\\QuizGame.js":"5","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Quiz\\Quiz.js":"6","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Leaderboard\\Leaderboard.js":"7","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\EarnCoins\\EarnCoins.js":"8","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Notifications\\Notifications.js":"9","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Settings\\Settings.js":"10","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Signup\\Signup.js":"11","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\QuizResult\\QuizResult.js":"12","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Sidemenu\\Sidemenu.js":"13","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Header\\Header.js":"14","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Notification\\Notification.js":"15","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Leader\\Leader.js":"16","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\EarnCoin\\EarnCoin.js":"17","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Setting\\Setting.js":"18","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\serviceWorkerRegistration.js":"19","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\api\\v1.js":"20","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\api\\handleResponse.js":"21","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\ToastAlert\\index.js":"22","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\ToastAlert\\ToastAlert.js":"23","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\ProtectedRoute.js":"24","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\Logged.js":"25","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Quizzes\\Quizzes.js":"26","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Home\\Home.js":"27","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Lessons\\Lessons.js":"28","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Lesson\\Lesson.js":"29","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\LessonLecture\\LessonLecture.js":"30"},{"size":816,"mtime":1612838864480,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":2071,"mtime":1611518895601,"results":"34","hashOfConfig":"32"},{"size":5301,"mtime":1612555737100,"results":"35","hashOfConfig":"32"},{"size":6652,"mtime":1612649124382,"results":"36","hashOfConfig":"32"},{"size":1157,"mtime":1612570478101,"results":"37","hashOfConfig":"32"},{"size":1598,"mtime":1612569655554,"results":"38","hashOfConfig":"32"},{"size":1788,"mtime":1608751782339,"results":"39","hashOfConfig":"32"},{"size":2419,"mtime":1612569876063,"results":"40","hashOfConfig":"32"},{"size":4676,"mtime":1612567315710,"results":"41","hashOfConfig":"32"},{"size":4598,"mtime":1610156862749,"results":"42","hashOfConfig":"32"},{"size":2092,"mtime":1612570914484,"results":"43","hashOfConfig":"32"},{"size":5163,"mtime":1612568899040,"results":"44","hashOfConfig":"32"},{"size":2452,"mtime":1611521066265,"results":"45","hashOfConfig":"32"},{"size":899,"mtime":1609816374633,"results":"46","hashOfConfig":"32"},{"size":467,"mtime":1612569623934,"results":"47","hashOfConfig":"32"},{"size":552,"mtime":1608751782330,"results":"48","hashOfConfig":"32"},{"size":13899,"mtime":1612568893049,"results":"49","hashOfConfig":"32"},{"size":5064,"mtime":1609544671890,"results":"50","hashOfConfig":"32"},{"size":2358,"mtime":1612837449308,"results":"51","hashOfConfig":"32"},{"size":238,"mtime":1609639281584,"results":"52","hashOfConfig":"32"},{"size":40,"mtime":1609553530551,"results":"53","hashOfConfig":"32"},{"size":804,"mtime":1610164235522,"results":"54","hashOfConfig":"32"},{"size":588,"mtime":1610243138488,"results":"55","hashOfConfig":"32"},{"size":464,"mtime":1611190295054,"results":"56","hashOfConfig":"32"},{"size":1843,"mtime":1612648995545,"results":"57","hashOfConfig":"32"},{"size":3817,"mtime":1612569352040,"results":"58","hashOfConfig":"32"},{"size":1666,"mtime":1612570014635,"results":"59","hashOfConfig":"32"},{"size":946,"mtime":1612637059608,"results":"60","hashOfConfig":"32"},{"size":3442,"mtime":1612570218274,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18qlas6",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\index.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\reportWebVitals.js",[],["134","135"],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Login\\Login.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\QuizGame\\QuizGame.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Quiz\\Quiz.js",["136"],"import React from 'react'\r\nimport { Card, Button } from 'react-onsenui'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Quiz = props => {\r\n  return (\r\n    <ons-col width=\"85%\">\r\n      <Card className=\"round-30px flex-100 mx-10px p-0 m-0 h-100 bg-gray-opacity\">\r\n        <div className=\"w-100 center-x\">\r\n          <img className=\"round-30px w-100\" src={props.image} height=\"200\"></img>\r\n        </div>\r\n        <div className=\"w-100 center-x mt-35px px-5px b-box\">\r\n          <h3 className=\"m-0 p-0 rubik-bold txt-white txt-center\">{props.title}</h3>\r\n        </div>\r\n        <div className=\"w-100 center-x mt-5px\">\r\n          <p className=\"w-80 m-0 px-10px center-x txt-center txt-white fs-13px\">{props.description}</p>\r\n        </div>\r\n        <div className=\"py-35px center-x\">\r\n          <div className=\"w-80\">\r\n            <Link to={`/QuizGame/${props.quizId}`}>\r\n              <Button className=\"hover-btn round-30px fs-14px bg-blue-dark\" modifier=\"large--cta\"><p className=\"p-0 m-0 rubik-regular\">{props.buttonText}</p></Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </ons-col>\r\n  )\r\n}\r\n\r\nexport default Quiz;\r\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Leaderboard\\Leaderboard.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\EarnCoins\\EarnCoins.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Notifications\\Notifications.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Settings\\Settings.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Signup\\Signup.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\QuizResult\\QuizResult.js",["137"],"import React from 'react'\r\nimport Cookies from 'universal-cookie'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-onsenui'\r\nimport MonetizationOnSharpIcon from '@material-ui/icons/MonetizationOnSharp'\r\nimport Confetti from 'react-confetti'\r\n\r\nconst QuizResult = props => {\r\n  const cookies = new Cookies(),\r\n    text = {\r\n      congrats: {\r\n        es: 'Felicidades',\r\n        en: 'Congrats'\r\n      },\r\n      buttonShare: {\r\n        es: 'Compartir resultados',\r\n        en: 'Share result'\r\n      },\r\n      buttonHome: {\r\n        es: 'Ir al inicio',\r\n        en: 'Go to home'\r\n      }\r\n    }\r\n\r\n  return (\r\n    <main className=\"w-100 h-100 bg-blue-dark\">\r\n      <Confetti />\r\n      <section className=\"h-33\">\r\n        <div className=\"w-100 center-xy h-100\">\r\n          <img className=\"round-50\" src=\"https://picsum.photos/200/300\" height=\"100px\" width=\"100px\"></img>\r\n        </div>\r\n      </section>\r\n      <section className=\"h-33 center-xy\">\r\n        <div className=\"w-85 h-100\">\r\n          <ons-row>\r\n            <h3 className=\"txt-center w-100 rubik-regular txt-white m-0 p-0 py-5px\">{text.congrats[cookies.get('iso')]}!</h3>\r\n          </ons-row>\r\n          <ons-row>\r\n            <p className=\"txt-center w-100 rubik-regular txt-gray fs-15px m-0 p-0\">{props.params.message}</p>\r\n          </ons-row>\r\n        </div>\r\n      </section>\r\n      <section className=\"h-33 center-xy\">\r\n        <div className=\"w-85 h-100\">\r\n          <div className=\"w-100 center-x\">\r\n            <Button className=\"round-30px center-xy bg-none border-1px\" modifier=\"large--cta\">\r\n              <MonetizationOnSharpIcon className=\"mr-10px\" />{text.buttonShare[cookies.get('iso')]}\r\n            </Button>\r\n          </div>\r\n          <div className=\"w-100 center-x mt-10px\">\r\n            <Link className=\"w-100\" to={\"/Home\"}>\r\n              <Button className=\"hover-btn round-30px bg-success\" modifier=\"large--cta\">{text.buttonHome[cookies.get('iso')]}</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default QuizResult;\r\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Sidemenu\\Sidemenu.js",["138"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport Cookies from 'universal-cookie'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Sidemenu extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.cookies = new Cookies()\r\n    this.state = {\r\n      redirect: false,\r\n      text: {\r\n        coins: {\r\n          es: 'Monedas',\r\n          en: 'Coins'\r\n        },\r\n        home: {\r\n          es: 'Inicio',\r\n          en: 'Home'\r\n        },\r\n        leaderboard: {\r\n          es: 'Liderato',\r\n          en: 'Leaderboard'\r\n        },\r\n        notifications: {\r\n          es: 'Notificaciones',\r\n          en: 'Notifications'\r\n        },\r\n        settings: {\r\n          es: 'Configuraciones',\r\n          en: 'Settings'\r\n        },\r\n        logout: {\r\n          es: 'Salir',\r\n          en: 'Log out'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    this.cookies = new Cookies()\r\n    this.cookies.remove('token', { path: '/' })\r\n    localStorage.clear()\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={{ pathname: '/' }} />\r\n    }\r\n\r\n    return (\r\n      <Menu onClose={this.props.showMenu} burgerButtonClassName={this.props.isMenuOpen ? 'd-block' : 'd-none'} isOpen={this.props.isMenuOpen} className=\"bg-blue-dark z-index-master\" width={\"100%\"}>\r\n        <div className=\"w-100 h-100\">\r\n          <section className=\"h-30 p-35px b-box\">\r\n            <img className=\"round-50\" src=\"https://picsum.photos/200/300\" height=\"100px\" width=\"100px\"></img>\r\n            <div className=\"mt-5px\">\r\n              <ons-row>\r\n                <h3 className=\"rubik-regular txt-white m-0 p-0 py-5px\">{localStorage.getItem('username')}</h3>\r\n              </ons-row>\r\n              <ons-row>\r\n                <p className=\"rubik-regular txt-gray fs-15px m-0 p-0\">{localStorage.getItem('coins')} {this.state.text.coins[this.cookies.get('iso')]}</p>\r\n              </ons-row>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"h-60 p-35px b-box center-y\">\r\n            <div>\r\n              <Link className=\"flex menu-overlay\" to={\"/Home\"}>\r\n                <div className=\"center-xy mr-10px\">\r\n                  <HomeIcon className=\"txt-white\" />\r\n                </div>\r\n                <div className=\"center-xy py-15px rubik-regular txt-white\">{this.state.text.home[this.cookies.get('iso')]}</div>\r\n              </Link>\r\n              <Link className=\"flex menu-overlay\" to={\"/Leaderboard\"}>\r\n                <div className=\"center-xy mr-10px\">\r\n                  <EmojiEventsIcon className=\"txt-white\" />\r\n                </div>\r\n                <div className=\"center-xy py-15px rubik-regular txt-white\">{this.state.text.leaderboard[this.cookies.get('iso')]}</div>\r\n              </Link>\r\n              <Link className=\"flex menu-overlay\" to={\"/Notifications\"}>\r\n                <div className=\"center-xy mr-10px\">\r\n                  <NotificationsIcon className=\"txt-white\" />\r\n                </div>\r\n                <div className=\"center-xy py-15px rubik-regular txt-white\">{this.state.text.notifications[this.cookies.get('iso')]}</div>\r\n              </Link>\r\n              {/* Earn coins por ahora no es necesario pero es probable que se cambie por otra cosa después. */}\r\n              {/* <Link className=\"flex menu-overlay\" to={\"/EarnCoins\"}>\r\n                <div className=\"center-xy mr-10px\">\r\n                  <MonetizationOnSharpIcon className=\"txt-white\" />\r\n                </div>\r\n                <div className=\"center-xy py-15px rubik-regular txt-white\">Earn coins</div>\r\n              </Link> */}\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"h-10 row-end px-35px b-box\">\r\n            <div className=\"flex w-100 b-top py-10px\">\r\n              <Link className=\"flex w-50 menu-overlay py-10px b-right\" to={\"/Settings\"}>\r\n                <div className=\"center-y mr-10px\">\r\n                  <SettingsIcon className=\"txt-gray-light\" />\r\n                </div>\r\n                <p className=\"center-y txt-gray-light\">{this.state.text.settings[this.cookies.get('iso')]}</p>\r\n              </Link>\r\n              <div className=\"flex w-50 menu-overlay py-10px right hover-btn\" onClick={this.logout}>\r\n                <div className=\"center-y mr-10px\">\r\n                  <ExitToAppIcon className=\"txt-gray-light\" />\r\n                </div>\r\n                <p className=\"center-y txt-gray-light rubik-regular\">{this.state.text.logout[this.cookies.get('iso')]}</p>\r\n              </div>\r\n            </div>\r\n            {/* <Button className=\"hover-btn fs-15px\" modifier=\"large--cta\">Iniciar sesión con facebook</Button> */}\r\n          </section>\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidemenu;\r\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Header\\Header.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Notification\\Notification.js",["139"],"import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport 'moment-timezone'\r\n\r\nconst Notification = props => {\r\n  return (\r\n    <div className={`mb-10px w-100 h-20 flex px-10px b-box round-rl-10px ${props.unread ? \"bg-gray-opacity-light border-l-3px\" : \"bg-gray-opacity\"}` }>\r\n      <div className=\"h-100 center-xy\">\r\n        <div className=\"txt-gray w-100 h-auto center-xy px-10px b-box\">\r\n          <img className=\"round-50\" src={props.image} height=\"45px\" width=\"45px\"></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"center-y h-100\">\r\n        <div className=\"w-100 h-auto px-10px b-box\">\r\n          <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">{props.title}</p>\r\n          <p className=\"p-0 m-0 txt-gray fs-13px\">\r\n            <Moment fromNow ago>{props.date}</Moment>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Leader\\Leader.js",["140"],"import React from 'react'\r\n\r\nconst Leader = props => {\r\n  return (\r\n    <div className={`${props.isLeader ? \"w-100 txt-center\" : \"py-15px w-50 txt-center\"}`}>\r\n      <img className=\"round-50\" src={props.image} height=\"100px\" width=\"100px\"></img>\r\n      <p className=\"w-100 p-0 m-0 txt-white rubik-bold\">{props.username}</p>\r\n      <p className=\"w-100 p-0 m-0 txt-gray-light fs-12px\">{props.textCoins}: {props.coins}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leader;\r\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\EarnCoin\\EarnCoin.js",["141"],"import React from \"react\"\r\n\r\nconst EarnCoin = props => {\r\n  return (\r\n    <div className=\"w-48 h-30 bg-gray-opacity center-xy wrap mb-10px\">\r\n      <div className=\"w-100 center-x pt-15px b-box\">\r\n        <img src={props.image} height=\"65px\" width=\"65px\"></img>\r\n      </div>\r\n      <div className=\"pb-5px b-box\">\r\n        <p className=\"txt-white fs-14px w-100 p-0 m-0 txt-center\">{props.title}</p>\r\n        <p className=\"txt-gray fs-12px w-100 p-0 m-0 txt-center\">+{props.coins} Coins</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EarnCoin;\r\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Setting\\Setting.js",["142","143"],"import React, { Component } from 'react'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport { Input, Button, Checkbox, Radio } from 'react-onsenui'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport Cookies from 'universal-cookie'\r\nimport { APIUpdateUserData } from '../../api/v1'\r\nimport ToastAlert from '../ToastAlert/ToastAlert'\r\n\r\nclass Setting extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.cookies = new Cookies()\r\n    this.state = {\r\n      activeChanges: false,\r\n      typePassworInput1: 'password',\r\n      typePassworInput2: 'password',\r\n      visibleEye1: true,\r\n      visibleEye2: true,\r\n      newUsername: '',\r\n      newEmail: '',\r\n      password: '',\r\n      newPassword: '',\r\n      allowNotifications: true,\r\n      language: this.cookies.get('language'),\r\n      iso: this.cookies.get('iso'),\r\n      text: {\r\n        spanish: {\r\n          es: 'Español',\r\n          en: 'Spanish'\r\n        },\r\n        english: {\r\n          es: 'Ingles',\r\n          en: 'English'\r\n        },\r\n        activeNotifications: {\r\n          es: 'Activar notificaciones',\r\n          en: 'Active notifications'\r\n        },\r\n        buttonSave: {\r\n          es: 'Guardar',\r\n          en: 'Save'\r\n        },\r\n        buttonCancel: {\r\n          es: 'Cancelar',\r\n          en: 'Cancel'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSelectedSetting = type => {\r\n    this.setState({\r\n      activeChanges: true\r\n    })\r\n  }\r\n\r\n  handleClickEye = type => {\r\n    if (type === 1) {\r\n      this.setState({\r\n        typePassworInput1: (this.state.typePassworInput1 === 'password') ? 'text' : 'password',\r\n        visibleEye1: !this.state.visibleEye1\r\n      })\r\n    }\r\n    if (type === 2) {\r\n      this.setState({\r\n        typePassworInput2: (this.state.typePassworInput2 === 'password') ? 'text' : 'password',\r\n        visibleEye2: !this.state.visibleEye2\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChangeInput = data => {\r\n    this.setState(data)\r\n  }\r\n\r\n  renderSetting = () => {\r\n    return (\r\n      <div className=\"mb-10px w-100 h-33 flex bg-gray-opacity px-10px b-box round-10px\">\r\n        <div className=\"w-auto h-100 center-y\">\r\n          <div className=\"w-100 h-auto txt-gray border-1px round-50 center-xy p-8px bg-none\">\r\n            {this.props.icon}\r\n          </div>\r\n        </div>\r\n        <div className=\"w-90 center-y h-100\">\r\n          <div className=\"w-100 h-auto px-10px b-box\">\r\n            <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">{this.props.title}</p>\r\n            <p className=\"p-0 m-0 txt-gray fs-13px\">{this.props.info}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"center-xy w-auto h-100 hover-btn\" onClick={() => this.handleSelectedSetting(this.props.type)}>\r\n          <div className=\"w-100 h-auto right\">\r\n            <ArrowForwardIosIcon className=\"txt-gray\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleCheckboxSettings = (type, isOn, language, iso) => {\r\n    let response = null\r\n    if (type === 'push-notifications') {\r\n      this.setState({\r\n        allowNotifications: !this.state.allowNotifications\r\n      })\r\n      response = { success: 1, message: 'Estado de notificaciones actualizado' }\r\n    }\r\n    if (type === 'language' && isOn === 'on') {\r\n      this.cookies.set('language', language)\r\n      this.cookies.set('iso', iso)\r\n      this.setState({\r\n        language,\r\n        iso,\r\n      })\r\n      this.props.data({ language, iso })\r\n      response = { success: 1, message: 'Language changed successfully' }\r\n    }\r\n\r\n    this.child.showToast(response)\r\n  }\r\n\r\n  /** Se creara una función para cada elemento debido a que después se puede agregar su respectiva validación. **/\r\n  renderUsernameChange = () => {\r\n    console.log('ENTRO AQUI', this.state.language, this.state.iso)\r\n    return (\r\n      <div className=\"w-100 h-auto mb-10px\">\r\n        <Input className=\"w-100 txt-white\" modifier=\"material\" type=\"text\" placeholder=\"jhondoe\" onChange={event => this.handleChangeInput({ newUsername: event.target.value })} />\r\n        <div className=\"mt-5px flex right\">\r\n          <Button className=\"round-30px bg-success hover-btn fs-12px w-33 mx-10px txt-center\" onClick={() => this.handleClickSave('username')}>{this.state.text.buttonSave[this.cookies.get('iso')]}</Button>\r\n          <Button className=\"round-30px bg-none border-1px hover-btn fs-12px w-33 txt-center\" onClick={() => this.setState({ activeChanges: false })}>{this.state.text.buttonCancel[this.cookies.get('iso')]}</Button>\r\n        </div>\r\n        <ToastAlert onRef={ref => this.child = ref} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderEmailChange = () => {\r\n    return (\r\n      <div className=\"w-100 h-auto mb-10px\">\r\n        <Input className=\"w-100 txt-white\" modifier=\"material\" type=\"email\" placeholder=\"jhon@doe.com\" onChange={event => this.handleChangeInput({ newEmail: event.target.value })} />\r\n        <div className=\"mt-5px flex right\">\r\n          <Button className=\"round-30px bg-success hover-btn fs-12px w-33 mx-10px txt-center\" onClick={() => this.handleClickSave('email')}>{this.state.text.buttonSave[this.cookies.get('iso')]}</Button>\r\n          <Button className=\"round-30px bg-none border-1px hover-btn fs-12px w-33 txt-center\" onClick={() => this.setState({ activeChanges: false })}>{this.state.text.buttonCancel[this.cookies.get('iso')]}</Button>\r\n        </div>\r\n        <ToastAlert onRef={ref => this.child = ref} />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  renderPasswordChange = () => {\r\n    return (\r\n      <div className=\"w-100 h-auto mb-10px\">\r\n        <div className=\"p-relative\">\r\n          <p className=\"w-100 fs-13px txt-gray\">Contraseña actual</p>\r\n          <Input className=\"w-100 txt-white\" modifier=\"material\" type={this.state.typePassworInput1} placeholder=\"********************\" onChange={event => this.handleChangeInput({ password: event.target.value })} />\r\n          <VisibilityIcon className={`txt-gray eye form-control-feedback hover-btn h-50 right ${this.state.visibleEye1 ? 'd-none' : 'd-block'}`} onClick={() => this.handleClickEye(1)} />\r\n          <VisibilityOffIcon className={`txt-gray eye form-control-feedback hover-btn h-50 right ${!this.state.visibleEye1 ? 'd-none' : 'd-block'}`} onClick={() => this.handleClickEye(1)} />\r\n        </div>\r\n        <div className=\"p-relative\">\r\n          <p className=\"w-100 fs-13px txt-gray\">Nueva contraseña</p>\r\n          <Input className=\"w-100 txt-white\" modifier=\"material\" type={this.state.typePassworInput2} placeholder=\"********************\" onChange={event => this.handleChangeInput({ newPassword: event.target.value })} />\r\n          <VisibilityIcon className={`txt-gray eye form-control-feedback hover-btn h-50 right ${this.state.visibleEye2 ? 'd-none' : 'd-block'}`} onClick={() => this.handleClickEye(2)} />\r\n          <VisibilityOffIcon className={`txt-gray eye form-control-feedback hover-btn h-50 right ${!this.state.visibleEye2 ? 'd-none' : 'd-block'}`} onClick={() => this.handleClickEye(2)} />\r\n        </div>\r\n        <div className=\"mt-5px flex right\">\r\n          <Button className=\"round-30px bg-success hover-btn fs-12px w-33 mx-10px txt-center\" onClick={() => this.handleClickSave('password')}>{this.state.text.buttonSave[this.cookies.get('iso')]}</Button>\r\n          <Button className=\"round-30px bg-none border-1px hover-btn fs-12px w-33 txt-center\" onClick={() => this.setState({ activeChanges: false })}>{this.state.text.buttonCancel[this.cookies.get('iso')]}</Button>\r\n        </div>\r\n        <ToastAlert onRef={ref => this.child = ref} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderPushNotificationsChange = () => {\r\n    return (\r\n      <section className=\"mb-10px h-33 round-10px\">\r\n        <div className=\"mb-10px w-100 h-100 flex bg-gray-opacity px-10px b-box round-10px\">\r\n          <div className=\"w-100 h-100 overflow-auto\">\r\n            <div className=\"w-100 h-100 wrap txt-gray center-x px-15px b-box bg-none\">\r\n              <div className=\"flex w-100 h-100 py-10px b-box center-y\">\r\n                <Checkbox\r\n                  checked={this.state.allowNotifications}\r\n                  onChange={() => this.handleCheckboxSettings('push-notifications')}\r\n                  modifier=\"material\" />\r\n                <div className=\"w-100 h-100 px-15px center-y\">\r\n                  <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">{this.state.text.activeNotifications[this.state.iso]}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"center-xy w-auto h-auto hover-btn\" onClick={() => this.setState({ activeChanges: false })}>\r\n            <div className=\"w-100 h-auto right\">\r\n              <ArrowBackIosIcon className=\"txt-gray\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastAlert onRef={ref => this.child = ref} />\r\n      </section>\r\n    )\r\n  }\r\n\r\n  renderLanguageChange = () => {\r\n    return (\r\n      <section className=\"mb-10px w-100 h-auto round-10px\">\r\n        <div className=\"mb-10px w-100 h-33 flex bg-gray-opacity px-10px b-box round-10px\">\r\n          <div className=\"w-90 h-100 overflow-auto\">\r\n            <div className=\"w-auto h-auto wrap txt-gray center-x px-15px b-box bg-none\">\r\n              <div className=\"flex w-100 py-10px b-box\">\r\n                <Radio\r\n                  checked={(this.state.language === 'english') ? true : false}\r\n                  onChange={event => this.handleCheckboxSettings('language', event.target.value, 'english', 'en')}\r\n                  modifier=\"material\" />\r\n                <div className=\"w-100 h-auto px-10px center-y\">\r\n                  <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">{this.state.text.english[this.state.iso]}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"b-box flex w-100 py-10px b-box\">\r\n                <Radio\r\n                  checked={(this.state.language === 'spanish') ? true : false}\r\n                  onChange={event => this.handleCheckboxSettings('language', event.target.value, 'spanish', 'es')}\r\n                  modifier=\"material\" />\r\n                <div className=\"w-100 h-auto px-10px center-y\">\r\n                  <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">{this.state.text.spanish[this.state.iso]}</p>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"b-box flex w-100 py-10px b-box\">\r\n                <Radio\r\n                  checked={(this.state.language === \"Russian\") ? true : false}\r\n                  onChange={event => this.handleCheckboxSettings('language', event.target.value, 'Russian')}\r\n                  modifier=\"material\" />\r\n                <div className=\"w-100 h-auto px-10px center-y\">\r\n                  <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">Russian</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"b-box flex w-100 py-10px b-box\">\r\n                <Radio\r\n                  checked={(this.state.language === \"Detusch\") ? true : false}\r\n                  onChange={event => this.handleCheckboxSettings('language', event.target.value, 'Detusch')}\r\n                  modifier=\"material\" />\r\n                <div className=\"w-100 h-auto px-10px center-y\">\r\n                  <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">Detusch</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"b-box flex w-100 py-10px b-box\">\r\n                <Radio\r\n                  checked={(this.state.language === \"Italian\") ? true : false}\r\n                  onChange={event => this.handleCheckboxSettings('language', event.target.value, 'Italian')}\r\n                  modifier=\"material\" />\r\n                <div className=\"w-100 h-auto px-10px center-y\">\r\n                  <p className=\"p-0 m-0 txt-white rubik-bold fs-14px\">Italian</p>\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          <div className=\"center-xy w-100 h-auto hover-btn\" onClick={() => this.setState({ activeChanges: false })}>\r\n            <div className=\"w-100 h-auto right\">\r\n              <ArrowBackIosIcon className=\"txt-gray\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastAlert onRef={ref => this.child = ref} />\r\n      </section>\r\n    )\r\n  }\r\n\r\n  handleClickSave = async type => {\r\n    let response = null\r\n\r\n    if (type === 'username') {\r\n      response = await APIUpdateUserData('username', { newUsername: this.state.newUsername })\r\n      if (response.success === 1) {\r\n        this.props.data({ username: response.data.username })\r\n      }\r\n    }\r\n    if (type === 'email') {\r\n      response = await APIUpdateUserData('email', { newEmail: this.state.newEmail })\r\n      if (response.success === 1) {\r\n        this.props.data({ email: response.data.email })\r\n      }\r\n    }\r\n    if (type === 'username' || type === 'email' && response && response.success === 1) {\r\n      this.cookies.set('token', response.data.token)\r\n    }\r\n    if (type === 'password') {\r\n      response = await APIUpdateUserData('password', {\r\n        password: this.state.password,\r\n        newPassword: this.state.newPassword\r\n      })\r\n    }\r\n    this.child.showToast(response)\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.activeChanges) {\r\n      return this.renderSetting()\r\n    }\r\n    if (this.props.type === \"username\") {\r\n      return this.renderUsernameChange()\r\n    }\r\n    if (this.props.type === \"email\") {\r\n      return this.renderEmailChange()\r\n    }\r\n    if (this.props.type === \"password\") {\r\n      return this.renderPasswordChange()\r\n    }\r\n    if (this.props.type === 'push-notifications') {\r\n      return this.renderPushNotificationsChange()\r\n    }\r\n    if (this.props.type === 'language') {\r\n      return this.renderLanguageChange()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Setting;\r\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\api\\v1.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\api\\handleResponse.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\ToastAlert\\index.js",[],["144","145"],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\ToastAlert\\ToastAlert.js",["146"],"import React, { Component } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nclass ToastAlert extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n  componentWillUnmount() {\n    this.props.onRef(undefined)\n  }\n\n  showToast({success, message}) {\n    console.log(success, message)\n    if(success === 1) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_CENTER,\n        className: 'txt-center'\n      })\n    } else {\n      toast.warning(message, {\n        position: toast.POSITION.BOTTOM_CENTER,\n        className: 'txt-center'\n      })\n    }\n  }\n  \n  render() {\n    return (\n      <ToastContainer limit={1}  />\n    )\n  }\n}\n\nexport default ToastAlert\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\ProtectedRoute.js",["147"],"import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Cookies from 'universal-cookie'\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const cookies = new Cookies(),\r\n      isAuthenticated = cookies.get('token'),\r\n      Component = this.props.component,\r\n      computedMatch = this.props.computedMatch.params\r\n\r\n    return isAuthenticated ? (\r\n      <Component params={computedMatch} />\r\n    ) : (\r\n        <Redirect to={{ pathname: '/' }} />\r\n      );\r\n  }\r\n}\r\n\r\nexport default ProtectedRoute;","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\Logged.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Quizzes\\Quizzes.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Home\\Home.js",["148","149"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Header from '../Header/Header'\nimport { animations } from 'react-animation'\nimport Cookies from 'universal-cookie'\n\nimport 'onsenui/css/onsenui.css'\nimport 'onsenui/css/onsen-css-components.css'\nimport '../.././index.css'\n\nclass Quizes extends Component {\n  constructor() {\n    super()\n\n    this.cookies = new Cookies()\n    this.state = {\n      quizzes: [],\n      quizzesElements: [],\n      sections: [\n        'Forex',\n        'Stock',\n        'Cryptocurrency'\n        // 'Strategies',\n        // 'Personality',\n        // 'Trivia',\n        // 'Finance'\n      ],\n      currentSection: 'Forex',\n      animation: animations.fadeIn,\n      text: {\n        lessons: {\n          es: 'Lecciones',\n          en: 'Lessons'\n        },\n        quizzes: {\n          es: 'Cuestionarios',\n          en: 'Quizzes'\n        },\n        forex: {\n          es: 'Divisas',\n          en: 'Forex',\n        },\n        stock: {\n          es: 'Acciones',\n          en: 'Stock'\n        },\n        cryptocurrency: {\n          es: 'Criptomonedas',\n          en: 'Cryptocurrency'\n        },\n        header: {\n          es: 'Inicio',\n          en: 'Home'\n        }\n      }\n    }\n  }\n\n  renderSectionsNavbar = () => {\n    const elements = []\n    for (const section of this.state.sections) {\n      elements.push(\n        <div className=\"hover-btn\">\n          <p className={`mr-15px ${section === this.state.currentSection ? 'selected' : ''}`} onClick={() => this.handleClickCurrentSection(section)}>{ this.state.text[section.toLowerCase()][this.cookies.get('iso')] }</p>\n        </div>\n      )\n    }\n\n    return elements\n  }\n\n  handleClickCurrentSection = currentSection => {\n    this.setState({\n      currentSection,\n      animation: animations.fadeOut\n    })\n\n    setTimeout(() => this.setState({animation: animations.fadeIn}), 500)\n  }\n\n  render() {\n    return (\n      <main className=\"w-100 h-100 flex wrap center-x bg-blue-dark\">\n        <Header typeMenu=\"sidemenu\" headerTitle={this.state.text.header[this.cookies.get('iso')]} />\n        <section className=\"w-90 h-90 wrap center-x\">\n          <div className=\"flex w-100 h-10 overflow-auto txt-gray-light fs-13px rubik-bold\">\n            {this.renderSectionsNavbar()}\n          </div>\n          <div className=\"w-100 h-90 overflow-auto\">\n            <div className=\"flex wrap w-100 overflow-auto\">\n              <Link \n                className=\"flex bg-gray-opacity round-30px mb-10px w-100 bg-white p-15px\" \n                to={`/Lessons/${this.state.currentSection}`}\n                style={{animation: this.state.animation}}\n                >\n                <div className=\"w-auto\">\n                  <img className=\"round-50\" src=\"https://picsum.photos/200/300\" width=\"60\" height=\"60\"></img>\n                </div>\n                <div className=\"w-90 center-y center-x\">\n                  <h3 className=\"m-0 p-0 mx-15px rubik-bold txt-white\">{this.state.text.lessons[this.cookies.get('iso')]}</h3>\n                </div>\n              </Link>\n              <Link\n                className=\"flex bg-gray-opacity round-30px mb-10px w-100 bg-white p-15px\" \n                to={`/Quizzes/${this.state.currentSection}`} \n                style={{animation: this.state.animation}}\n              >\n                <div className=\"w-auto\">\n                  <img className=\"round-50\" src=\"https://picsum.photos/200/300\" width=\"60\" height=\"60\"></img>\n                </div>\n                <div className=\"w-90 center-y center-x\">\n                  <h3 className=\"m-0 p-0 mx-15px rubik-bold txt-white\">{this.state.text.quizzes[this.cookies.get('iso')]}</h3>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </section>\n      </main>\n    )\n  }\n}\n\nexport default Quizes;\n","C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Lessons\\Lessons.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\Lesson\\Lesson.js",[],"C:\\Users\\user\\Desktop\\TradingQuizz\\app\\trading-quiz-frontend\\src\\components\\LessonLecture\\LessonLecture.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":10,"column":11,"nodeType":"156","endLine":10,"endColumn":76},{"ruleId":"154","severity":1,"message":"155","line":30,"column":11,"nodeType":"156","endLine":30,"endColumn":102},{"ruleId":"154","severity":1,"message":"155","line":66,"column":13,"nodeType":"156","endLine":66,"endColumn":104},{"ruleId":"154","severity":1,"message":"155","line":10,"column":11,"nodeType":"156","endLine":10,"endColumn":82},{"ruleId":"154","severity":1,"message":"155","line":6,"column":7,"nodeType":"156","endLine":6,"endColumn":80},{"ruleId":"154","severity":1,"message":"155","line":7,"column":9,"nodeType":"156","endLine":7,"endColumn":59},{"ruleId":"157","severity":1,"message":"158","line":283,"column":29,"nodeType":"159","messageId":"160","endLine":283,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":283,"column":61,"nodeType":"159","messageId":"160","endLine":283,"endColumn":63},{"ruleId":"150","replacedBy":"161"},{"ruleId":"152","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":8,"endColumn":4},{"ruleId":"163","severity":1,"message":"164","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":8,"endColumn":4},{"ruleId":"154","severity":1,"message":"155","line":97,"column":19,"nodeType":"156","endLine":97,"endColumn":104},{"ruleId":"154","severity":1,"message":"155","line":109,"column":19,"nodeType":"156","endLine":109,"endColumn":104},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["167"],["168"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]